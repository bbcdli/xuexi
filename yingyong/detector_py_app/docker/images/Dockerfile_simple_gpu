FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04

#ENV http_proxy 'http://194.145.60.1:9400'
#ENV https_proxy 'http://194.145.60.1:9400'
#ENV no_proxy 'localhost,127.0.0.1,localaddress,code.siemens.com'

# Install.
RUN \
  apt-get update && \
  apt-get install -y build-essential && \
  apt-get install -y curl git htop man unzip vim wget cmake cmake-curses-gui python-dev python-pip

RUN     apt-get install -y libaprutil1-dev libglib2.0-dev libgoogle-glog-dev libgtk-3-dev \
        libv4l-dev libtbb-dev libpomp-dev libgtk2.0-dev libopenblas-dev liblapack-dev gdebi \
        ffmpeg ffmpeg2theora libavcodec-extra libavcodec-dev libavformat-dev libavresample-dev \
        libavdevice-dev libavcodec-ffmpeg-extra56 yasm libges-1.0-dev \
        libssl-dev gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav wget gstreamer1.0-plugins-*

RUN pip install numpy flask tensorflow-gpu

WORKDIR /
RUN     git clone https://github.com/opencv/opencv.git /opencv
WORKDIR /opencv
RUN     git checkout tags/3.3.0 && mkdir -p build
WORKDIR /opencv/build
RUN     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_IPP=OFF -DWITH_FFMPEG=ON -DWITH_GTK=ON \
        -DWITH_GSTREAMER=ON -DWITH_V4L=ON -DWITH_OPENMP=ON -DWITH_TBB=ON .. && make -j8 && make install && ldconfig && rm -rf /opencv

WORKDIR /usr/local/src

