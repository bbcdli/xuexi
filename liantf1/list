#create test/train folder list
SUB_FOLDER=-1
LABEL_0=0
LABEL_1=1
LABEL_2=2
LABEL_3=3
USE_ORI_SCRIPT=0
LIST_TYPE='test_clipfolder'
folder='/home/hy/Documents/aggr/Own_Data/images'
#./create_train_list.sh /home/hy/Documents/aggr/Own_Data/images  #no / at the end
> $LIST_TYPE.list

if [[ $USE_ORI_SCRIPT == "0" ]]; then
  #for folder in $1/*
  for folder in $folder/*
  do
    echo $folder
    for imagesFolder in "$folder"/*
    do
      if [[ $folder == *"0"* ]];then
 echo "$imagesFolder" $LABEL_0 >> $LIST_TYPE.list
      fi
      if [[ $folder == *"1"* ]];then
        echo "$imagesFolder" $LABEL_1 >> $LIST_TYPE.list
      fi
      if [[ $folder == *"2"* ]];then
        echo "$imagesFolder" $LABEL_2 >> $LIST_TYPE.list
      fi
     
    done
  done
fi




#!/bin/bash
# 
# convert the video to images, can convert avi or mp4
#   Usage (sudo for the remove priviledge):
#       sudo ./convert_video_to_images.sh path/to/video fps
#   Example Usage:
#       sudo ./convert_video_to_images.sh ~/document/videofile/ 5
#   Example Output:
#       ~/document/videofile/walk/video1.avi 
#       #=>
#       ~/document/videofile/walk/video1/00001.jpg

#       ...
# used command: ./convert_video_to_images.sh /home/hy/Documents/Own_data 1 
#sudo apt-get install ffmpeg

for folder in $1/*
do
    for file in "$folder"/*/*.avi
    do
        if [[ ! -d "${file[@]%.avi}" ]]; then
            mkdir -p "${file[@]%.avi}"
        fi
        ffmpeg -i "$file" -vf fps=$2 "${file[@]%.avi}"/%05d.jpg
        #rm "$file"
    done
done


#!/bin/bash
#
# convert the images folder to the test.list and train.list file according to
#   the distribution, command will clear the train.list and test.list files first
#
#   Args:
#       path: the path to the video folder
#       factor: denominator that split the train and test data. if the number 
#               is 4, then 1/4 of the data will be written to test.list and the
#               rest of the data will be written to train.list
#   Usage:
#       ./convert_images_to_list.sh path/to/video 4
#   Example Usage:
#       ./convert_images_to_list.sh ~/document/videofile 4
#   Example Output(train.list and test.list):
#       /Volumes/passport/datasets/action_kth/origin_images/boxing/person01_boxing_d1_uncomp 0
#       /Volumes/passport/datasets/action_kth/origin_images/boxing/person01_boxing_d2_uncomp 0
#       ...
#  used command: ./create_train_test_list.sh /home/hy/Documents/Own_data 4  #the factor 4 does not wowrk.

> train.list
> test.list
COUNT=-1
for folder in $1/*
do
    COUNT=$[$COUNT + 1]
    for imagesFolder in "$folder"/*/*/    #specify / to loop only directories
    do
        if (( $(jot -r 1 1 $2)  > 1 )); then
            echo "$imagesFolder" $COUNT >> train.list
        else
            echo "$imagesFolder" $COUNT >> test.list
        fi        
    done
done


#create_list_hy.sh
#!/bin/bash

# create train and test list containing absolute path of each image and label
#   
#   Args:
#       path: the path to the video folder
#       factor: denominator that split the train and test data. if the number 
#               is 4, then 1/4 of the data will be written to test.list and the
#               rest of the data will be written to train.list
#   Usage:
#       ./convert_images_to_list.sh path/to/video 4
#   Example Usage:
#       ./convert_images_to_list.sh ~/document/videofile 4
#   Example Output(train.list and test.list):
#       /Volumes/passport/datasets/action_kth/origin_images/boxing/person01_boxing_d1_uncomp/xx1.jpg 0
#       /Volumes/passport/datasets/action_kth/origin_images/boxing/person01_boxing_d2_uncomp/xx2.jpg 0

#       ...
#f

> train_hy.list
> test_hy.list
COUNT=-1

for cl_folder in $1/*  #contain 3 classes, $1=tmp,folder=bike,bask,divi
do
    COUNT=$[$COUNT + 1]
    COUNT_IM=0
    
    for type_folder in "$cl_folder"/*/    #specify / to loop only directories folder=biking/cl1/
    
    do  
        COUNT_IM=0
        for images in "$type_folder"*    #imagesFolder=bikeing/cl1/cl1_0/
        
        do 
           TOTAL_IM=$(ls $type_folder* | wc -l)
           
           COUNT_IM=$[$COUNT_IM + 1]
           #echo 'total:'$TOTAL_IM'  count_im:'$COUNT_IM
        if (( $COUNT_IM<$TOTAL_IM-5 )); then
            echo "$images" $COUNT >> train_hy.list
            #echo 'train'
        else
            echo "$images" $COUNT >> test_hy.list
            #echo 'test'
        fi 
        # 
        done      
    done
done
echo 'end'
